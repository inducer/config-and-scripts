#! /bin/bash

set -eo pipefail

envname="$1"
if [[ "$envname" = "parlazy" ]]; then
    declare -A PACKAGE_TO_REMOTE_AND_BRANCH=( \
        [loopy]=kaushikcfd/pytato-array-context-transforms
        [meshmode]=kaushikcfd/pytato-array-context-transforms
        [grudge]=github/main
        [mirgecom]=github/distributed-parallel-lazy
    )
elif [[ "$envname" = "prod" ]]; then
    declare -A PACKAGE_TO_REMOTE_AND_BRANCH=( \
        [loopy]=kaushikcfd/pytato-array-context-transforms
        [meshmode]=kaushikcfd/pytato-array-context-transforms
        [grudge]=github/boundary_lazy_comm_v2
        [mirgecom]=github/production
    )
elif [[ "$envname" = "factx" ]]; then
    declare -A PACKAGE_TO_REMOTE_AND_BRANCH=( \
        [loopy]=kaushikcfd/main
        [arraycontext]=kaushikcfd/main
        [meshmode]=kaushikcfd/main
        [grudge]=kaushikcfd/main
        [pytato]=kaushikcfd/main
        [mirgecom]=github/fusion_actx
    )
elif [[ "$envname" = "main" ]]; then
    declare -A PACKAGE_TO_REMOTE_AND_BRANCH=( \
        [loopy]=github/main
        [arraycontext]=github/main
        [meshmode]=github/main
        [grudge]=github/main
        [pytato]=github/main
        [mirgecom]=github/main
    )
else
    echo "usage: $0 envname (must be one of a few known ones)"
fi

for pkg in "${!PACKAGE_TO_REMOTE_AND_BRANCH[@]}"; do
    remote_and_branch="${PACKAGE_TO_REMOTE_AND_BRANCH[$pkg]}"
    remote="$(dirname "$remote_and_branch")"
    remote_branch="$(basename "$remote_and_branch")"

    if [[ "$remote_branch" == "main" && "$remote" != "github" ]]; then
        local_branch="$remote-$remote_branch"
    else
        local_branch="$remote_branch"
    fi

    echo "-------------------------------------------------------------------"
    echo "Updating $pkg to $remote_branch as $local_branch..."
    echo "-------------------------------------------------------------------"

    cd "$HOME/src/$pkg"
    git fetch "$remote"

    if ! git checkout -t "$remote/$remote_branch" -b "$local_branch"; then
        git switch "$local_branch"
        git branch --set-upstream-to="$remote/$remote_branch"
        git pull --rebase "$remote" "$remote_branch"
    fi
done

# vim: sw=4
